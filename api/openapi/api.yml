openapi: 3.0.0
servers:
  - url: http://api.dkosv3.9rum.cc
    description: ssup2ket auth service
info:
  description: ssup2ket auth service
  version: "1.0.0"
  title: ssup2ket auth service
  contact:
    email: supsup5642@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
components:
  schemas:
    UserCreate:
      type: object
      required:
        - loginId
        - password
        - phone
        - email
      properties:
        loginId:
          type: string
        password:
          type: string
        phone:
          type: string
        email:
          type: string 
    UserUpdate:
      type: object
      required:
        - id
        - password
        - phone
        - email
      properties:
        id:
          type: string
        password:
          type: string
        phone:
          type: string
        email:
          type: string
    UserInfo:
      type: object
      required:
        - id
        - loginId
        - phone
        - email
      properties:
        id:
          type: string
        loginId:
          type: string
        phone:
          type: string
        email:
          type: string
    UserInfoList:
      type: object
      required:
        - users
        - metadata
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserInfo'
        metadata:
          $ref: '#/components/schemas/ListMeta'
    ListMeta:
      type: object
      required:
        - limit
        - offset
        - total
      properties:
        limit:
          type: integer
        offset:
          type: integer
        total:
          type: integer
    ErrorInfo:
      type: object
      required:
        - code
        - requestId
      properties:
        code:
          type: string
        requestId:
          type: string
  parameters:
    UserID:
      name: UserID
      in: path
      required: true
      schema:
        type: string
    Offset:
      name: Offset
      in: query
      required: false
      schema:
        type: integer
        minimum: 0
    Limit:
      name: Limit
      in: query
      required: false
      schema:
        type: integer
        default: 50
paths:
  /users:
    get:
      parameters:
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      tags:
        - user
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfoList'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
    post:
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
  /users/{UserID}:
    parameters:
      - $ref: '#/components/parameters/UserID'
    get:
      tags:
        - user
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
    put:
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
    delete:
      tags:
        - user
      responses:
        '200':
          description: ''
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'